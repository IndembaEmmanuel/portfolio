---
import { loadTranslations, translate } from '../i18n/i18n';
import LanguageSwitcher from './LanguageSwitcher.astro';

const currentLanguage = Astro.currentLocale || 'fr';

const translations = await loadTranslations(currentLanguage);

const t = (key: string) => translate(translations, key);
---

<header class="navbar glass">
  <div class="container navbar-container">
    <div class="logo">
      <a href={`/${currentLanguage}`}>Developper</a>
    </div>
    
    <button class="mobile-menu-toggle" aria-label="Menu" id="mobile-menu-toggle">
      <span class="bar"></span>
      <span class="bar"></span>
      <span class="bar"></span>
    </button>
    
    <div class="nav-container" id="nav-container">
      <nav class="nav-links">
        <a href="#hero" class="nav-link">{t('navbar.home')}</a>
        <a href="#skills" class="nav-link">{t('navbar.skills')}</a>
        <a href="#projects" class="nav-link">{t('navbar.projects')}</a>
        <a href="#about" class="nav-link">{t('navbar.about')}</a>
      </nav>
      <div class="language-switcher-container">
        <LanguageSwitcher />
      </div>
    </div>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
    const navContainer = document.getElementById('nav-container');
    const navLinks = document.querySelectorAll('.nav-link');
    
    mobileMenuToggle?.addEventListener('click', () => {
      mobileMenuToggle.classList.toggle('active');
      navContainer?.classList.toggle('show');
      document.body.classList.toggle('menu-open');
    });
    
    navLinks.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenuToggle?.classList.remove('active');
        navContainer?.classList.remove('show');
        document.body.classList.remove('menu-open');
      });
    });
    
    window.addEventListener('resize', () => {
      if (window.innerWidth > 768 && navContainer?.classList.contains('show')) {
        mobileMenuToggle?.classList.remove('active');
        navContainer.classList.remove('show');
        document.body.classList.remove('menu-open');
      }
    });
  });
</script>

<style>
  .navbar {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1000;
    padding: 1rem 0;
  }

  .navbar-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .nav-container {
    display: flex;
    align-items: center;
  }
  
  .language-switcher-container {
    margin-left: 1.5rem;
  }

  .logo a {
    font-family: var(--font-secondary);
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--color-text-primary);
    text-decoration: none;
    transition: color var(--transition-fast);
  }

  .logo a:hover {
    color: var(--color-accent);
  }

  .nav-links {
    display: flex;
    gap: 2rem;
  }

  .nav-link {
    color: var(--color-text-primary);
    font-weight: 500;
    text-decoration: none;
    transition: color var(--transition-fast);
    position: relative;
  }

  .nav-link:hover {
    color: var(--color-accent);
  }

  .nav-link::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 0;
    height: 2px;
    background-color: var(--color-accent);
    transition: width var(--transition-normal);
  }

  .nav-link:hover::after {
    width: 100%;
  }
  
  /* Styles pour le bouton hamburger */
  .mobile-menu-toggle {
    display: none;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    z-index: 1001;
  }
  
  .bar {
    display: block;
    width: 25px;
    height: 3px;
    margin: 5px auto;
    background-color: var(--color-text-primary);
    transition: all 0.3s ease-in-out;
  }
  
  /* État actif du bouton hamburger */
  .mobile-menu-toggle.active .bar:nth-child(1) {
    transform: translateY(8px) rotate(45deg);
  }
  
  .mobile-menu-toggle.active .bar:nth-child(2) {
    opacity: 0;
  }
  
  .mobile-menu-toggle.active .bar:nth-child(3) {
    transform: translateY(-8px) rotate(-45deg);
  }
  
  /* Styles pour les écrans mobiles */
  @media (max-width: 768px) {
    .navbar-container {
      padding: 0 1rem;
    }
    
    .mobile-menu-toggle {
      display: block;
    }
    
    .nav-container {
      position: fixed;
      top: 0;
      right: -100%;
      width: 80%;
      max-width: 300px;
      height: 100vh;
      background-color: var(--color-bg-primary);
      box-shadow: -5px 0 15px rgba(0, 0, 0, 0.2);
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      justify-content: flex-start;
      padding: 5rem 2rem 2rem;
      transition: right 0.3s ease-in-out;
      overflow-y: auto;
    }
    
    .nav-container.show {
      right: 0;
    }
    
    .nav-links {
      flex-direction: column;
      width: 100%;
      gap: 1.5rem;
      margin-bottom: 2rem;
    }
    
    .nav-link {
      font-size: 1.2rem;
      width: 100%;
      display: block;
      padding: 0.5rem 0;
    }
    
    .language-switcher-container {
      margin-left: 0;
      margin-top: 1.5rem;
      width: 100%;
    }
    
    body.menu-open {
      overflow: hidden;
    }
  }
</style>
